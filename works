import pygame
import time
from render import *

linen = (250, 240, 230)



class TextBubble:
    def __init__(self, position, width, height) -> None:

        self.location = position
        self.width = width
        self.height = height

        self.rect = pygame.Rect(position.x - width / 2, position.y - height / 2, width, height)

        self.dialogue = []

        self.dialogue_count = 0

        self.current_dialogue = 0

        self.speed = 150

        self.current_letter = ""
        self.multiplier = 0

        self.current_row = 0

        self.show_dialogue = ""


    def display(self, surface):
        pygame.draw.rect(surface, linen, self.rect)

        if len(self.dialogue[self.current_dialogue]) <= 0:
            return

        self.multiplier += 1
        self.current_letter = self.dialogue[self.current_dialogue][0]
        self.show_dialogue += self.current_letter
        self.dialogue[self.current_dialogue] = self.dialogue[self.current_dialogue][1:]
        # print(self.current_letter)
        if self.current_letter == "+":
            self.multiplier = 0
            self.current_row += 1
            return
        if self.current_letter == " ":
            return

        surface.blit(abc[self.current_letter.capitalize()], (self.location.x - self.width / 2 + (self.multiplier * 8), self.location.y - self.height / 2 + 10 + (self.current_row * 8)))
        
        print(self.show_dialogue)


    def show(self, surface, text):
        



    def add_dialogue(self, text):
        enter = ""

        tokened = text.split(" ")
        counter = 0

        for word in tokened:
            if len(word) + 1 + counter < 36:
                enter += word + " "
                counter += len(word) + 1
            else:
                enter += "+"
                counter = len(word) + 1
                enter += word + " "

        self.dialogue.append(enter)
        print(self.dialogue)
        self.dialogue_count += 1
